(()=>{var e={};e.id=421,e.ids=[421],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5234:(e,t,r)=>{"use strict";r.d(t,{A:()=>a});var n=r(6037),o=r.n(n);let a=async()=>{if(o().connections[0].readyState){console.log("Already connected to mongoDB.");return}try{await o().connect(process.env.MONGODB_URI,{useNewUrlParser:!0,useUnifiedTopology:!0}),console.log("Successfully connected to MongoDB.")}catch(e){console.error("Failed to connect to MongoDB:",e)}}},6037:e=>{"use strict";e.exports=require("mongoose")},6487:()=>{},6580:(e,t,r)=>{"use strict";r.d(t,{A:()=>s});var n=r(6037),o=r.n(n);let a=new(o()).Schema({name:{type:String},serviceType:{type:String,required:!0,enum:["general-cleaning","end-of-lease-cleaning","office-cleaning","deep-cleaning","regular-cleaning","construction-cleaning","commercial-cleaning","carpet-cleaning","apartment-cleaning","restaurant-cleaning"]},location:{type:String,required:!0},phone:{type:String,required:!0,match:/^[0-9]{10}$/},email:{type:String,match:/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/},bedrooms:{type:Number,min:1},bathrooms:{type:Number,min:1},date:{type:Date,required:!0},time:{type:String},status:{type:String,enum:["pending","done"],default:"pending"}}),s=o().models.CleaningQuote||o().model("CleaningQuote",a)},7005:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>y,routeModule:()=>d,serverHooks:()=>m,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>g});var n={};r.r(n),r.d(n,{PATCH:()=>p});var o=r(2706),a=r(8203),s=r(5994),i=r(5234),u=r(6580),c=r(9187);async function p(e){try{await i.A;let t=new URL(e.nextUrl).pathname.split("/").pop();if(!t)return c.NextResponse.json({error:"Booking Id is required"},{status:400});let r=await u.A.findByIdAndUpdate(t,{status:"done"},{new:!0});if(!r)return c.NextResponse.json({error:"quote not found"},{status:404});return c.NextResponse.json({message:"Status updated",data:r},{status:200})}catch(e){return c.NextResponse.json({error:"Error updating status"},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/cleaningQuote/[id]/route",pathname:"/api/cleaningQuote/[id]",filename:"route",bundlePath:"app/api/cleaningQuote/[id]/route"},resolvedPagePath:"/home/shashank/Documents/GitHub/Project/WipeOut-Services/app/api/cleaningQuote/[id]/route.ts",nextConfigOutput:"",userland:n}),{workAsyncStorage:l,workUnitAsyncStorage:g,serverHooks:m}=d;function y(){return(0,s.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:g})}},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[638,452],()=>r(7005));module.exports=n})();